import { JsSeries, Series } from "../series";
export interface ListFunctions<T> {
    get(index: number): Series<T>;
    first(): Series<T>;
    last(): Series<T>;
    /** Get the length of the arrays as UInt32. */
    lengths(): Series<number>;
    /** Compute the max value of the arrays in the list */
    max(): Series<number>;
    /** Compute the mean value of the arrays in the list */
    mean(): Series<number>;
    /** Compute the min value of the arrays in the list */
    min(): Series<number>;
    /** Reverse the arrays in the list */
    reverse(): Series<Series<T>>;
    /** Sort the arrays in the list */
    sort(reverse?: boolean): Series<Series<T>>;
    sort(opt: {
        reverse: boolean;
    }): Series<Series<T>>;
    /** Sum all the arrays in the list */
    sum(): Series<number>;
    /** Get the unique/distinct values in the list */
    unique(): Series<Series<T>>;
}
export declare const ListFunctions: <T>(_s: JsSeries) => ListFunctions<T>;
