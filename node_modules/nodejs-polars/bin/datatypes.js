"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.polarsTypeToConstructor = exports.DTYPE_TO_FFINAME = exports.DataType = void 0;
const polars_internal_1 = __importDefault(require("./internals/polars_internal"));
var DataType;
(function (DataType) {
    DataType[DataType["Int8"] = 0] = "Int8";
    DataType[DataType["Int16"] = 1] = "Int16";
    DataType[DataType["Int32"] = 2] = "Int32";
    DataType[DataType["Int64"] = 3] = "Int64";
    DataType[DataType["UInt8"] = 4] = "UInt8";
    DataType[DataType["UInt16"] = 5] = "UInt16";
    DataType[DataType["UInt32"] = 6] = "UInt32";
    DataType[DataType["UInt64"] = 7] = "UInt64";
    DataType[DataType["Float32"] = 8] = "Float32";
    DataType[DataType["Float64"] = 9] = "Float64";
    DataType[DataType["Bool"] = 10] = "Bool";
    DataType[DataType["Utf8"] = 11] = "Utf8";
    DataType[DataType["List"] = 12] = "List";
    DataType[DataType["Date"] = 13] = "Date";
    DataType[DataType["Datetime"] = 14] = "Datetime";
    DataType[DataType["Time"] = 15] = "Time";
    DataType[DataType["Object"] = 16] = "Object";
    DataType[DataType["Categorical"] = 17] = "Categorical";
})(DataType = exports.DataType || (exports.DataType = {}));
exports.DTYPE_TO_FFINAME = {
    [DataType.Int8]: "i8",
    [DataType.Int16]: "i16",
    [DataType.Int32]: "i32",
    [DataType.Int64]: "i64",
    [DataType.UInt8]: "u8",
    [DataType.UInt16]: "u16",
    [DataType.UInt32]: "u32",
    [DataType.UInt64]: "u64",
    [DataType.Float32]: "f32",
    [DataType.Float64]: "f64",
    [DataType.Bool]: "bool",
    [DataType.Utf8]: "str",
    [DataType.List]: "list",
    [DataType.Date]: "date",
    [DataType.Datetime]: "datetime",
    [DataType.Time]: "time",
    [DataType.Object]: "object",
    [DataType.Categorical]: "categorical",
};
const POLARS_TYPE_TO_CONSTRUCTOR = {
    Float32: "new_opt_f32",
    Float64: "new_opt_f64",
    Int8: "new_opt_i8",
    Int16: "new_opt_i16",
    Int32: "new_opt_i32",
    Int64: "new_opt_i64",
    UInt8: "new_opt_u8",
    UInt16: "new_opt_u16",
    UInt32: "new_opt_u32",
    UInt64: "new_opt_u64",
    Date: "new_opt_u32",
    Datetime: "new_opt_u32",
    Bool: "new_opt_bool",
    Utf8: "new_str",
    Object: "new_object",
    List: "new_list",
};
const polarsTypeToConstructor = (dtype) => {
    const constructor = POLARS_TYPE_TO_CONSTRUCTOR[DataType[dtype]];
    if (!constructor) {
        throw new Error(`Cannot construct Series for type ${DataType[dtype]}.`);
    }
    return polars_internal_1.default.series[constructor];
};
exports.polarsTypeToConstructor = polarsTypeToConstructor;
